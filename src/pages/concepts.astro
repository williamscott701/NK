---
import Layout from '../layouts/Layout.astro';
import Footer from '../components/Footer.astro';
import PageSearch from '../components/PageSearch.tsx';
import Breadcrumb from '../components/Breadcrumb.tsx';
import conceptsData from '../data/bible-concepts.json';
import { PATHS } from '../utils/paths';

const concepts = conceptsData.concepts;
// Dynamically generate filter options from unique categories
const uniqueCategories = [...new Set(concepts.map(concept => concept.category).filter(Boolean))];
---

<Layout 
  title="Bible Concepts - Understanding Scripture" 
  description="Discover the deep meanings behind key biblical concepts like love, faith, hope, and salvation. Each concept is supported by relevant verses and explanations."
  image="/favicon.svg"
>
  <main class="min-h-screen">
    <!-- Header Section -->
    <section class="relative overflow-hidden bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-100 py-8 md:py-16">
      <div class="absolute top-10 left-10 w-48 h-48 bg-bible-gold/5 rounded-full blur-2xl"></div>
      <div class="absolute bottom-10 right-10 w-64 h-64 bg-bible-blue/5 rounded-full blur-2xl"></div>
      
      <div class="relative z-10 max-w-6xl mx-auto px-4 md:px-6">
        <!-- Breadcrumb -->
        <Breadcrumb 
          client:load 
          items={[
            { label: 'Home', href: PATHS.home() },
            { label: 'Concepts' }
          ]} 
        />

        <!-- Page Header -->
        <div class="text-center mb-12">
          <h1 class="text-5xl md:text-6xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-blue-400 to-sky-400 mb-4">
            Bible Concepts
          </h1>
          <p class="text-xl text-gray-600 max-w-2xl mx-auto hidden sm:block">
            Discover the deep meanings behind key biblical concepts. Each concept is supported by relevant verses and explanations.
          </p>
        </div>



        <!-- Search Section -->
        <PageSearch 
          client:load 
          placeholder="Search for concepts like love, faith, hope..."
          conceptsData={concepts}
          searchMode="concepts"
        />

        <!-- Status Summary Section -->
        <div class="mt-8 bg-white/60 backdrop-blur-sm rounded-2xl p-6 border border-white/20 shadow-lg">
          <div class="grid grid-cols-1 md:grid-cols-3 gap-6 text-center">
            <div class="space-y-2">
              <div class="text-3xl font-bold text-blue-600">
                {concepts.length}
              </div>
              <div class="text-sm text-gray-600">Total Concepts</div>
            </div>
            <div class="space-y-2">
              <div class="text-3xl font-bold text-green-600">
                {concepts.filter(c => c.detailedContent).length}
              </div>
              <div class="text-sm text-gray-600">Complete Concepts</div>
            </div>
            <div class="space-y-2">
              <div class="text-3xl font-bold text-yellow-600">
                {concepts.filter(c => !c.detailedContent).length}
              </div>
              <div class="text-sm text-gray-600">Basic Concepts</div>
            </div>
          </div>
          
          <!-- Progress Bar -->
          <div class="mt-6">
            <div class="flex justify-between text-sm text-gray-600 mb-2">
              <span>Progress</span>
              <span>{Math.round((concepts.filter(c => c.detailedContent).length / concepts.length) * 100)}% Complete</span>
            </div>
            <div class="w-full bg-gray-200 rounded-full h-3">
              <div 
                class="bg-gradient-to-r from-green-400 to-green-600 h-3 rounded-full transition-all duration-500"
                style={`width: ${(concepts.filter(c => c.detailedContent).length / concepts.length) * 100}%`}
              ></div>
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- Concepts Grid Section -->
    <section class="py-16 bg-gradient-to-br from-white to-gray-50">
      <div class="max-w-6xl mx-auto px-6">
        <!-- Filter Section -->
        <div class="flex flex-wrap gap-4 justify-end mb-6">
          <select id="categoryFilter" class="px-4 py-2 border border-gray-300 rounded-lg bg-white text-gray-700 focus:ring-2 focus:ring-bible-gold focus:border-transparent" aria-label="Filter concepts by category">
            <option value="">All Categories</option>
            {uniqueCategories.map((category) => (
              <option value={category}>{category}</option>
            ))}
          </select>
        </div>
        
        <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
          {concepts.map((concept) => (
            <div 
              class="bg-white rounded-xl shadow-lg border border-gray-100 hover:shadow-xl transition-all duration-300 hover:transform hover:scale-105 overflow-hidden flex flex-col"
              data-concept={concept.id}
              data-category={concept.category || ''}
              data-significance={concept.significance || ''}
            >
              <div class="p-6 flex flex-col flex-grow">
                <div class="flex items-center mb-4">
                  <div class="w-12 h-12 bg-gradient-to-r from-blue-400 to-sky-400 rounded-xl flex items-center justify-center mr-4">
                    <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z"></path>
                    </svg>
                  </div>
                  <div class="flex-1">
                    <h3 class="text-xl font-bold text-gray-800">{concept.title}</h3>
                    <!-- Status Badge -->
                    <div class="flex items-center gap-2 mt-1">
                      {concept.detailedContent ? (
                        <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800 border border-green-200">
                          <svg class="w-3 h-3 mr-1" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
                          </svg>
                          Complete
                        </span>
                      ) : (
                        <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800 border border-yellow-200">
                          <svg class="w-3 h-3 mr-1" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd"></path>
                          </svg>
                          Basic
                        </span>
                      )}
                    </div>
                  </div>
                </div>
                
                <p class="text-gray-600 mb-4 leading-relaxed">
                  {concept.description}
                </p>


                
                <!-- Additional Information -->
                <div class="space-y-3 mb-6">
                  <!-- Category -->
                  {concept.category && (
                    <div class="flex items-center gap-3">
                      <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-sky-50 text-sky-600">
                        {concept.category}
                      </span>
                    </div>
                  )}
                  
                  <!-- Key Themes -->
                  {concept.keyThemes && concept.keyThemes.length > 0 && (
                    <div>
                      <p class="text-xs font-semibold text-gray-700 mb-1">Key Themes:</p>
                      <div class="flex flex-wrap gap-1">
                        {concept.keyThemes.slice(0, 3).map((theme) => (
                          <span class="inline-flex items-center px-2 py-1 rounded-md text-xs bg-gray-100 text-gray-700">
                            {theme}
                          </span>
                        ))}
                        {concept.keyThemes.length > 3 && (
                          <span class="inline-flex items-center px-2 py-1 rounded-md text-xs bg-gray-100 text-gray-600">
                            +{concept.keyThemes.length - 3}
                          </span>
                        )}
                      </div>
                    </div>
                  )}
                  
                  <!-- Application -->
                  {concept.application && concept.application.length > 0 && (
                    <div>
                      <p class="text-xs font-semibold text-gray-700 mb-1">Application:</p>
                      <div class="flex flex-wrap gap-1">
                        {concept.application.slice(0, 2).map((app) => (
                          <span class="inline-flex items-center px-2 py-1 rounded-md text-xs bg-blue-50 text-blue-500 border border-blue-100">
                            {app}
                          </span>
                          ))}
                        {concept.application.length > 2 && (
                          <span class="inline-flex items-center px-2 py-1 rounded-md text-xs bg-gray-100 text-gray-600">
                            +{concept.application.length - 2}
                          </span>
                        )}
                      </div>
                    </div>
                  )}
                </div>
                
                <div class="mt-auto">
                  <a 
                    href={PATHS.concept(concept.id)}
                    class="block w-full bg-gradient-to-r from-blue-400 to-sky-400 text-white py-2 px-4 rounded-lg hover:from-blue-500 hover:to-sky-500 transition-all duration-200 font-semibold text-center"
                  >
                    {concept.detailedContent ? 'Read Full Content' : 'View Basic Content'}
                  </a>
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>
    </section>


  </main>
  
  <Footer />
  
  <script>
    // Filter functionality
    document.addEventListener('DOMContentLoaded', function() {
      const categoryFilter = document.getElementById('categoryFilter');
      const conceptCards = document.querySelectorAll('[data-concept]');
      
      function filterConcepts() {
        if (!categoryFilter) return;
        
        const selectedCategory = categoryFilter.value;
        
        conceptCards.forEach(card => {
          const category = card.dataset.category;
          
          const categoryMatch = !selectedCategory || category === selectedCategory;
          
          if (categoryMatch) {
            (card as HTMLElement).style.display = 'block';
          } else {
            (card as HTMLElement).style.display = 'none';
          }
        });
      }
      
      if (categoryFilter) {
        categoryFilter.addEventListener('change', filterConcepts);
      }
    });
  </script>

  <style>
    .line-clamp-3 {
      display: -webkit-box;
      -webkit-line-clamp: 3;
      -webkit-box-orient: vertical;
      overflow: hidden;
    }
  </style>
</Layout>
